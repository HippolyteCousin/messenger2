[{"/home/duck/Documents/tweb/messenger2/front/src/index.js":"1","/home/duck/Documents/tweb/messenger2/front/src/App.js":"2","/home/duck/Documents/tweb/messenger2/front/src/reportWebVitals.js":"3","/home/duck/Documents/tweb/messenger2/front/src/components/login/login.jsx":"4","/home/duck/Documents/tweb/messenger2/front/src/components/login/register.jsx":"5","/home/duck/Documents/tweb/messenger2/front/src/components/welcome/welcome.jsx":"6","/home/duck/Documents/tweb/messenger2/front/src/utils/api_users.js":"7","/home/duck/Documents/tweb/messenger2/front/src/components/welcome/home.jsx":"8","/home/duck/Documents/tweb/messenger2/front/src/components/welcome/channel.jsx":"9"},{"size":500,"mtime":1607807436434,"results":"10","hashOfConfig":"11"},{"size":1089,"mtime":1608489301619,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607807436434,"results":"13","hashOfConfig":"11"},{"size":2384,"mtime":1608480037807,"results":"14","hashOfConfig":"11"},{"size":3257,"mtime":1608503337415,"results":"15","hashOfConfig":"11"},{"size":895,"mtime":1608503562743,"results":"16","hashOfConfig":"11"},{"size":4167,"mtime":1608502989071,"results":"17","hashOfConfig":"11"},{"size":2734,"mtime":1608505128907,"results":"18","hashOfConfig":"11"},{"size":2502,"mtime":1608505796819,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rnflph",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/duck/Documents/tweb/messenger2/front/src/index.js",[],["40","41"],"/home/duck/Documents/tweb/messenger2/front/src/App.js",[],"/home/duck/Documents/tweb/messenger2/front/src/reportWebVitals.js",[],"/home/duck/Documents/tweb/messenger2/front/src/components/login/login.jsx",["42"],"import React, { useState } from 'react';\nimport loginImg from \"./login.svg\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { useForm } from 'react-hook-form'\nimport { apiLogin } from \"../../utils/api_users\"\n\nconst LogIn = (props) => {\n\n    const { register, handleSubmit, errors } = useForm()\n    const [myErrors, setErrors] = useState('');\n    let history = useHistory()\n\n    const redirectToRegister = () => {\n        history.push('/register');\n    }\n    const redirectToHome = () => {\n        history.push('/');\n    }\n    const onSubmit = (data) => {\n        apiLogin(data.username, data.password,\n            (loggedIn) => {\n                history.push({\n                    pathname: '/home',\n                    search: '?id=' + data.username})\n            },\n            (erreur) => {\n                setErrors(erreur)\n            })\n    }\n\n    return (\n      <form className=\"base-container\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} alt=\"accueil login\"/>\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" placeholder=\"username\" ref={register({ required: true, maxLength: 30 })}/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" name=\"password\" placeholder=\"password\" ref={register({ required: true, maxLength: 30 })} />\n            </div>\n          </div>\n          {myErrors &&\n              <div className=\"alert-erreur\" role=\"alert\">\n                  {myErrors}\n              </div>\n          }\n        </div>\n        <div className=\"footer\">\n          <button type=\"submit\" className=\"btn\">\n            Login\n          </button>\n        </div>\n        <div className=\"register-from-login-button\">\n            <span>Dont have an account ? </span>\n            <span className=\"register-message\" onClick={() => redirectToRegister()}>Register</span>\n        </div>\n        <div className=\"home-button\">\n            <span className=\"home-message\" onClick={() => redirectToHome()}>Home</span>\n        </div>\n      </form>\n    );\n}\n\nexport default LogIn;\n","/home/duck/Documents/tweb/messenger2/front/src/components/login/register.jsx",["43"],"/home/duck/Documents/tweb/messenger2/front/src/components/welcome/welcome.jsx",[],"/home/duck/Documents/tweb/messenger2/front/src/utils/api_users.js",[],"/home/duck/Documents/tweb/messenger2/front/src/components/welcome/home.jsx",["44","45"],"/home/duck/Documents/tweb/messenger2/front/src/components/welcome/channel.jsx",["46","47","48","49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":37,"nodeType":"57","messageId":"58","endLine":10,"endColumn":43},{"ruleId":"55","severity":1,"message":"56","line":10,"column":37,"nodeType":"57","messageId":"58","endLine":10,"endColumn":43},{"ruleId":"55","severity":1,"message":"56","line":13,"column":37,"nodeType":"57","messageId":"58","endLine":13,"endColumn":43},{"ruleId":"59","severity":1,"message":"60","line":39,"column":8,"nodeType":"61","endLine":39,"endColumn":10,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"63","line":1,"column":27,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"64","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":26},{"ruleId":"55","severity":1,"message":"65","line":3,"column":28,"nodeType":"57","messageId":"58","endLine":3,"endColumn":41},{"ruleId":"55","severity":1,"message":"56","line":17,"column":37,"nodeType":"57","messageId":"58","endLine":17,"endColumn":43},{"ruleId":"55","severity":1,"message":"66","line":18,"column":12,"nodeType":"57","messageId":"58","endLine":18,"endColumn":20},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'printChannels' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["69"],"'useEffect' is defined but never used.","'apiCreateChannel' is defined but never used.","'apiGetChannel' is defined but never used.","'myErrors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [printChannels, user]",{"range":"72","text":"73"},[1113,1115],"[printChannels, user]"]