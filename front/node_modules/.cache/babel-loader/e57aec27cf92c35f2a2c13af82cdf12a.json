{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duck/Documents/tweb/messenger2/front/src/components/welcome/home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiCreateChannel } from \"../../utils/api_users\";\nimport { useForm } from 'react-hook-form';\n\nconst url = require('url');\n\nconst qs = require('querystring');\n\nconst Home = props => {\n  _s();\n\n  const user = qs.parse(url.parse(window.location.href).query)['id'];\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [myErrors, setErrors] = useState('');\n  let history = useHistory();\n\n  const logOut = () => {\n    history.push('/');\n  };\n\n  const onSubmit = data => apiCreateChannel(user, data.channel, erreur => {\n    setErrors(erreur);\n  });\n\n  const printChannels = () => {\n    apiGetChannel(user, channels => {\n      console.log(channels);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"base-container\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"Bienvenue retour, \", user, \" !\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"channel\",\n          placeholder: \"channel\",\n          ref: register({\n            required: true,\n            maxLength: 30\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Create a channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), myErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-erreur\",\n      role: \"alert\",\n      children: myErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-out-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-message\",\n        onClick: () => logOut(),\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"Wa9OF5VEORlM7Sr8UwhW2PbaPMw=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/duck/Documents/tweb/messenger2/front/src/components/welcome/home.jsx"],"names":["React","useState","useEffect","useHistory","apiCreateChannel","useForm","url","require","qs","Home","props","user","parse","window","location","href","query","register","handleSubmit","errors","myErrors","setErrors","history","logOut","push","onSubmit","data","channel","erreur","printChannels","apiGetChannel","channels","console","log","required","maxLength"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,aAAD,CAAlB;;AAEA,MAAME,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACpB,QAAMC,IAAI,GAAIH,EAAE,CAACI,KAAH,CAASN,GAAG,CAACM,KAAJ,CAAUC,MAAM,CAACC,QAAP,CAAgBC,IAA1B,EAAgCC,KAAzC,EAAgD,IAAhD,CAAd;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCd,OAAO,EAAlD;AACA,QAAM,CAACe,QAAD,EAAWC,SAAX,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAIqB,OAAO,GAAGnB,UAAU,EAAxB;;AAEA,QAAMoB,MAAM,GAAG,MAAM;AACjBD,IAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIC,IAAD,IAAUtB,gBAAgB,CACvCO,IADuC,EACjCe,IAAI,CAACC,OAD4B,EAClBC,MAAD,IAAY;AAC5BP,IAAAA,SAAS,CAACO,MAAD,CAAT;AACH,GAHsC,CAA3C;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxBC,IAAAA,aAAa,CAACnB,IAAD,EAAQoB,QAAD,IAAc;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAFY,CAAb;AAGH,GAJD;;AAMA,sBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,QAAQ,EAAIb,YAAY,CAACO,QAAD,CAAzD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,uCAA2Cd,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AACO,UAAA,IAAI,EAAC,SADZ;AAEO,UAAA,WAAW,EAAC,SAFnB;AAGO,UAAA,GAAG,EAAEM,QAAQ,CAAC;AAAEiB,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,SAAS,EAAE;AAA7B,WAAD;AAHpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AACQ,QAAA,SAAS,EAAC,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAcKf,QAAQ,iBACL;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAAA,gBACKA;AADL;AAAA;AAAA;AAAA;AAAA,YAfR,eAmBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAmC,QAAA,OAAO,EAAE,MAAMG,MAAM,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA/CD;;GAAMd,I;UAGyCJ,O,EAE7BF,U;;;KALZM,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiCreateChannel } from \"../../utils/api_users\"\nimport { useForm } from 'react-hook-form'\n\nconst url = require('url')\nconst qs = require('querystring')\n\nconst Home = (props) => {\n    const user = (qs.parse(url.parse(window.location.href).query)['id'])\n\n    const { register, handleSubmit, errors } = useForm()\n    const [myErrors, setErrors] = useState('')\n    let history = useHistory()\n\n    const logOut = () => {\n        history.push('/');\n    }\n\n    const onSubmit = (data) => apiCreateChannel(\n        user, data.channel, (erreur) => {\n            setErrors(erreur)\n        });\n\n    const printChannels = () => {\n        apiGetChannel(user, (channels) => {\n            console.log(channels)\n        })\n    }\n\n    return (\n        <form className=\"base-container\" onSubmit= { handleSubmit(onSubmit)} >\n            <div className=\"header\">Bienvenue retour, {user} !</div>\n            <div className=\"content\">\n            <div className=\"form-group\">\n              <input type=\"text\"\n                     name=\"channel\"\n                     placeholder=\"channel\"\n                     ref={register({ required: true, maxLength: 30 })} />\n            </div>\n              <button type=\"submit\"\n                      className=\"btn\">\n                Create a channel\n              </button>\n            </div>\n            {myErrors &&\n                <div className=\"alert-erreur\" role=\"alert\">\n                    {myErrors}\n                </div>\n            }\n            <div className=\"log-out-button\">\n                <span className=\"register-message\" onClick={() => logOut()}>Log Out</span>\n            </div>\n        </form>\n    )\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}