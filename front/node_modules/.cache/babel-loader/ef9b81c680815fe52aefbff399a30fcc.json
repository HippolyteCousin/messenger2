{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duck/Documents/tweb/messenger2/front/src/components/welcome/channel.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiCreateChannel, apiGetChannel } from \"../../utils/api_users\";\nimport { useForm } from 'react-hook-form';\n\nconst url = require('url');\n\nconst qs = require('querystring');\n\nconst Channel = props => {\n  _s();\n\n  const user = qs.parse(url.parse(window.location.href).query)['id'];\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [myErrors, setErrors] = useState('');\n  const [chan, setChannels] = useState([]);\n  let history = useHistory();\n\n  const logOut = () => {\n    history.push('/');\n  };\n\n  const onSubmit = data => apiCreateChannel(user, data.channel, erreur => {\n    setErrors(erreur);\n  });\n\n  const printChannels = () => {\n    apiGetChannel(user, channels => {\n      setChannels(channels);\n    });\n  };\n\n  useEffect(() => {\n    printChannels();\n  }, []);\n\n  const redirectToChan = data => {\n    history.push(\"home?id=\" + user + \"/\" + data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"salut\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Channel, \"6uWR84ZwA3zTScXpPDat1NoNQxg=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Channel;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"sources":["/home/duck/Documents/tweb/messenger2/front/src/components/welcome/channel.jsx"],"names":["React","useState","useEffect","useHistory","apiCreateChannel","apiGetChannel","useForm","url","require","qs","Channel","props","user","parse","window","location","href","query","register","handleSubmit","errors","myErrors","setErrors","chan","setChannels","history","logOut","push","onSubmit","data","channel","erreur","printChannels","channels","redirectToChan","Home"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,uBAAhD;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,aAAD,CAAlB;;AAEA,MAAME,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,IAAI,GAAIH,EAAE,CAACI,KAAH,CAASN,GAAG,CAACM,KAAJ,CAAUC,MAAM,CAACC,QAAP,CAAgBC,IAA1B,EAAgCC,KAAzC,EAAgD,IAAhD,CAAd;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCd,OAAO,EAAlD;AACA,QAAM,CAACe,QAAD,EAAWC,SAAX,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,IAAD,EAAOC,WAAP,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIwB,OAAO,GAAGtB,UAAU,EAAxB;;AAEA,QAAMuB,MAAM,GAAG,MAAM;AACjBD,IAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIC,IAAD,IAAUzB,gBAAgB,CACvCQ,IADuC,EACjCiB,IAAI,CAACC,OAD4B,EAClBC,MAAD,IAAY;AAC5BT,IAAAA,SAAS,CAACS,MAAD,CAAT;AACH,GAHsC,CAA3C;;AAKA,QAAMC,aAAa,GAAG,MAAM;AACxB3B,IAAAA,aAAa,CAACO,IAAD,EAAQqB,QAAD,IAAc;AAC9BT,MAAAA,WAAW,CAACS,QAAD,CAAX;AACH,KAFY,CAAb;AAGH,GAJD;;AAKA/B,EAAAA,SAAS,CAAC,MAAM;AACZ8B,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAME,cAAc,GAAIL,IAAD,IAAU;AAC7BJ,IAAAA,OAAO,CAACE,IAAR,CAAa,aAAaf,IAAb,GAAoB,GAApB,GAA0BiB,IAAvC;AACH,GAFD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnCD;;GAAMnB,O;UAGyCJ,O,EAG7BH,U;;;KANZO,O;AAsCN,eAAeyB,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiCreateChannel, apiGetChannel } from \"../../utils/api_users\"\nimport { useForm } from 'react-hook-form'\n\nconst url = require('url')\nconst qs = require('querystring')\n\nconst Channel = (props) => {\n    const user = (qs.parse(url.parse(window.location.href).query)['id'])\n\n    const { register, handleSubmit, errors } = useForm()\n    const [myErrors, setErrors] = useState('')\n    const [chan, setChannels] = useState([]);\n    let history = useHistory()\n\n    const logOut = () => {\n        history.push('/');\n    }\n\n    const onSubmit = (data) => apiCreateChannel(\n        user, data.channel, (erreur) => {\n            setErrors(erreur)\n        });\n\n    const printChannels = () => {\n        apiGetChannel(user, (channels) => {\n            setChannels(channels)\n        })\n    }\n    useEffect(() => {\n        printChannels()\n    }, [])\n\n    const redirectToChan = (data) => {\n        history.push(\"home?id=\" + user + \"/\" + data);\n    }\n\n    return (\n        <div>\n            salut\n        </div>\n    )\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}