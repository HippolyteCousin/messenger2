{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duck/Documents/tweb/messenger2/front/src/components/welcome/home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiCreateChannel, apiGetChannel } from \"../../utils/api_users\";\nimport { useForm } from 'react-hook-form';\nimport Gravatar from 'react-gravatar';\n\nconst url = require('url');\n\nconst qs = require('querystring');\n\nconst Home = props => {\n  _s();\n\n  const user = qs.parse(url.parse(window.location.href).query)['id'];\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [myErrors, setErrors] = useState('');\n  const [chan, setChannels] = useState([]);\n  let history = useHistory();\n\n  const logOut = () => {\n    history.push('/');\n  };\n\n  const onSubmit = data => apiCreateChannel(user, data.channel, erreur => {\n    setErrors(erreur);\n  });\n\n  const printChannels = () => {\n    apiGetChannel(user, channels => {\n      setChannels(channels);\n    });\n  };\n\n  useEffect(() => {\n    printChannels();\n  }, []);\n\n  const redirectToChan = data => {\n    history.push(\"channel?id=\" + user + \"&chan=\" + data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"base-container\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"Bienvenue retour, \", user, \" !\", /*#__PURE__*/_jsxDEV(Gravatar, {\n        email: \"mathews.kyle@gmail.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"channel\",\n          placeholder: \"channel\",\n          ref: register({\n            required: true,\n            maxLength: 30\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Create a channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titre\",\n        children: \"Liste de vos channels :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chan\",\n        children: chan.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channels-button\",\n          onClick: () => redirectToChan(i.name),\n          children: [\" \", i.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), myErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-erreur\",\n      role: \"alert\",\n      children: myErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-out-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-message\",\n        onClick: () => logOut(),\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"6uWR84ZwA3zTScXpPDat1NoNQxg=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/duck/Documents/tweb/messenger2/front/src/components/welcome/home.jsx"],"names":["React","useState","useEffect","useHistory","apiCreateChannel","apiGetChannel","useForm","Gravatar","url","require","qs","Home","props","user","parse","window","location","href","query","register","handleSubmit","errors","myErrors","setErrors","chan","setChannels","history","logOut","push","onSubmit","data","channel","erreur","printChannels","channels","redirectToChan","required","maxLength","map","i","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { apiCreateChannel, apiGetChannel } from \"../../utils/api_users\"\nimport { useForm } from 'react-hook-form'\nimport Gravatar from 'react-gravatar'\n\nconst url = require('url')\nconst qs = require('querystring')\n\nconst Home = (props) => {\n    const user = (qs.parse(url.parse(window.location.href).query)['id'])\n\n    const { register, handleSubmit, errors } = useForm()\n    const [myErrors, setErrors] = useState('')\n    const [chan, setChannels] = useState([]);\n    let history = useHistory()\n\n    const logOut = () => {\n        history.push('/');\n    }\n\n    const onSubmit = (data) => apiCreateChannel(\n        user, data.channel, (erreur) => {\n            setErrors(erreur)\n        });\n\n    const printChannels = () => {\n        apiGetChannel(user, (channels) => {\n            setChannels(channels)\n        })\n    }\n    useEffect(() => {\n        printChannels()\n    }, [])\n\n    const redirectToChan = (data) => {\n        history.push(\"channel?id=\" + user + \"&chan=\" + data);\n    }\n\n    return (\n        <form className=\"base-container\" onSubmit= { handleSubmit(onSubmit)} >\n            <div className=\"header\">\n                Bienvenue retour, {user} !\n                <Gravatar email=\"mathews.kyle@gmail.com\" />\n            </div>\n            <div className=\"content\">\n            <div className=\"form-group\">\n              <input type=\"text\"\n                     name=\"channel\"\n                     placeholder=\"channel\"\n                     ref={register({ required: true, maxLength: 30 })} />\n            </div>\n              <button type=\"submit\"\n                      className=\"btn\">\n                Create a channel\n              </button>\n              <div className=\"titre\">\n                Liste de vos channels :\n              </div>\n              <div className=\"chan\">\n                {chan.map((i) =>\n                    <div className=\"channels-button\" onClick={() => redirectToChan(i.name)}> {i.name} </div>)}\n              </div>\n            </div>\n            {myErrors &&\n                <div className=\"alert-erreur\" role=\"alert\">\n                    {myErrors}\n                </div>\n            }\n            <div className=\"log-out-button\">\n                <span className=\"register-message\" onClick={() => logOut()}>Log Out</span>\n            </div>\n        </form>\n    )\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}