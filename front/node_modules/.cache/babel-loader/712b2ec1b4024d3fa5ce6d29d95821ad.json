{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/duck/Documents/tweb/messenger2/frontend/src/components/login/login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport loginImg from \"./login.svg\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { useForm } from 'react-hook-form';\n\nconst LogIn = props => {\n  _s();\n\n  //const { register, handleSubmit, errors } = useForm()\n  const redirectToRegister = () => {\n    props.history.push('/register');\n  };\n\n  const redirectToHome = () => {\n    props.history.push('/');\n  };\n\n  const log = data => {\n    console.log(data);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"example\",\n      defaultValue: \"test\",\n      ref: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"exampleRequired\",\n      ref: register({\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n};\n\n_s(LogIn, \"+Nrz0BYUZDnkIuhmBbPsJSfSlWM=\", false, function () {\n  return [useForm];\n});\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/home/duck/Documents/tweb/messenger2/frontend/src/components/login/login.jsx"],"names":["React","withRouter","useForm","LogIn","props","redirectToRegister","history","push","redirectToHome","log","data","console","register","handleSubmit","watch","errors","onSubmit","required","exampleRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAG,MAAM;AACzBJ,IAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH,GAFD;;AAGA,QAAME,GAAG,GAAIC,IAAD,IAAU;AAClBC,IAAAA,OAAO,CAACF,GAAR,CAAYC,IAAZ;AACH,GAFD;;AAIA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4Cb,OAAO,EAAzD;;AACA,QAAMc,QAAQ,GAAGN,IAAI,IAAIC,OAAO,CAACF,GAAR,CAAYC,IAAZ,CAAzB;;AAEA,sBACG;AAAM,IAAA,QAAQ,EAAEG,YAAY,CAACG,QAAD,CAA5B;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,YAAY,EAAC,MAAnC;AAA0C,MAAA,GAAG,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAA8B,MAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,MAAM,CAACG,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJ7B,eAME;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAUH,CA3BD;;GAAMf,K;UAcgDD,O;;;KAdhDC,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport loginImg from \"./login.svg\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { useForm } from 'react-hook-form'\n\n\nconst LogIn = (props) => {\n\n    //const { register, handleSubmit, errors } = useForm()\n\n    const redirectToRegister = () => {\n        props.history.push('/register');\n    }\n    const redirectToHome = () => {\n        props.history.push('/');\n    }\n    const log = (data) => {\n        console.log(data)\n    }\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = data => console.log(data);\n\n    return (\n       <form onSubmit={handleSubmit(onSubmit)}>\n         <input name=\"example\" defaultValue=\"test\" ref={register} />\n\n         <input name=\"exampleRequired\" ref={register({ required: true })} />\n         {errors.exampleRequired && <span>This field is required</span>}\n\n         <input type=\"submit\" />\n       </form>\n     );\n}\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}