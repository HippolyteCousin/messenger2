{"ast":null,"code":"/* global IDBKeyRange */\n'use strict';\n\nvar ltgt = require('ltgt');\n\nvar NONE = {};\n\nmodule.exports = function createKeyRange(options) {\n  var lower = ltgt.lowerBound(options, NONE);\n  var upper = ltgt.upperBound(options, NONE);\n  var lowerOpen = ltgt.lowerBoundExclusive(options, NONE);\n  var upperOpen = ltgt.upperBoundExclusive(options, NONE);\n\n  if (lower !== NONE && upper !== NONE) {\n    return IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);\n  } else if (lower !== NONE) {\n    return IDBKeyRange.lowerBound(lower, lowerOpen);\n  } else if (upper !== NONE) {\n    return IDBKeyRange.upperBound(upper, upperOpen);\n  } else {\n    return null;\n  }\n};","map":{"version":3,"sources":["/home/duck/Documents/tweb/messenger2/frontend/node_modules/level-js/util/key-range.js"],"names":["ltgt","require","NONE","module","exports","createKeyRange","options","lower","lowerBound","upper","upperBound","lowerOpen","lowerBoundExclusive","upperOpen","upperBoundExclusive","IDBKeyRange","bound"],"mappings":"AAAA;AAEA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,IAAI,GAAG,EAAX;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAyBC,OAAzB,EAAkC;AACjD,MAAIC,KAAK,GAAGP,IAAI,CAACQ,UAAL,CAAgBF,OAAhB,EAAyBJ,IAAzB,CAAZ;AACA,MAAIO,KAAK,GAAGT,IAAI,CAACU,UAAL,CAAgBJ,OAAhB,EAAyBJ,IAAzB,CAAZ;AACA,MAAIS,SAAS,GAAGX,IAAI,CAACY,mBAAL,CAAyBN,OAAzB,EAAkCJ,IAAlC,CAAhB;AACA,MAAIW,SAAS,GAAGb,IAAI,CAACc,mBAAL,CAAyBR,OAAzB,EAAkCJ,IAAlC,CAAhB;;AAEA,MAAIK,KAAK,KAAKL,IAAV,IAAkBO,KAAK,KAAKP,IAAhC,EAAsC;AACpC,WAAOa,WAAW,CAACC,KAAZ,CAAkBT,KAAlB,EAAyBE,KAAzB,EAAgCE,SAAhC,EAA2CE,SAA3C,CAAP;AACD,GAFD,MAEO,IAAIN,KAAK,KAAKL,IAAd,EAAoB;AACzB,WAAOa,WAAW,CAACP,UAAZ,CAAuBD,KAAvB,EAA8BI,SAA9B,CAAP;AACD,GAFM,MAEA,IAAIF,KAAK,KAAKP,IAAd,EAAoB;AACzB,WAAOa,WAAW,CAACL,UAAZ,CAAuBD,KAAvB,EAA8BI,SAA9B,CAAP;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF,CAfD","sourcesContent":["/* global IDBKeyRange */\n\n'use strict'\n\nvar ltgt = require('ltgt')\nvar NONE = {}\n\nmodule.exports = function createKeyRange (options) {\n  var lower = ltgt.lowerBound(options, NONE)\n  var upper = ltgt.upperBound(options, NONE)\n  var lowerOpen = ltgt.lowerBoundExclusive(options, NONE)\n  var upperOpen = ltgt.upperBoundExclusive(options, NONE)\n\n  if (lower !== NONE && upper !== NONE) {\n    return IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen)\n  } else if (lower !== NONE) {\n    return IDBKeyRange.lowerBound(lower, lowerOpen)\n  } else if (upper !== NONE) {\n    return IDBKeyRange.upperBound(upper, upperOpen)\n  } else {\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"script"}