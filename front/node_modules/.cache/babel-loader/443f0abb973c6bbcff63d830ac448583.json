{"ast":null,"code":"/* global indexedDB */\n'use strict';\n\nmodule.exports = Level;\n\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;\n\nvar inherits = require('inherits');\n\nvar Iterator = require('./iterator');\n\nvar serialize = require('./util/serialize');\n\nvar deserialize = require('./util/deserialize');\n\nvar support = require('./util/support');\n\nvar clear = require('./util/clear');\n\nvar createKeyRange = require('./util/key-range');\n\nvar DEFAULT_PREFIX = 'level-js-';\n\nfunction Level(location, opts) {\n  if (!(this instanceof Level)) return new Level(location, opts);\n  AbstractLevelDOWN.call(this, {\n    bufferKeys: support.bufferKeys(indexedDB),\n    snapshots: true,\n    permanence: true,\n    clear: true\n  });\n  opts = opts || {};\n\n  if (typeof location !== 'string') {\n    throw new Error('constructor requires a location string argument');\n  }\n\n  this.location = location;\n  this.prefix = opts.prefix == null ? DEFAULT_PREFIX : opts.prefix;\n  this.version = parseInt(opts.version || 1, 10);\n}\n\ninherits(Level, AbstractLevelDOWN);\nLevel.prototype.type = 'level-js';\n\nLevel.prototype._open = function (options, callback) {\n  var req = indexedDB.open(this.prefix + this.location, this.version);\n  var self = this;\n\n  req.onerror = function () {\n    callback(req.error || new Error('unknown error'));\n  };\n\n  req.onsuccess = function () {\n    self.db = req.result;\n    callback();\n  };\n\n  req.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n\n    if (!db.objectStoreNames.contains(self.location)) {\n      db.createObjectStore(self.location);\n    }\n  };\n};\n\nLevel.prototype.store = function (mode) {\n  var transaction = this.db.transaction([this.location], mode);\n  return transaction.objectStore(this.location);\n};\n\nLevel.prototype.await = function (request, callback) {\n  var transaction = request.transaction; // Take advantage of the fact that a non-canceled request error aborts\n  // the transaction. I.e. no need to listen for \"request.onerror\".\n\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'));\n  };\n\n  transaction.oncomplete = function () {\n    callback(null, request.result);\n  };\n};\n\nLevel.prototype._get = function (key, options, callback) {\n  var store = this.store('readonly');\n\n  try {\n    var req = store.get(key);\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n\n  this.await(req, function (err, value) {\n    if (err) return callback(err);\n\n    if (value === undefined) {\n      // 'NotFound' error, consistent with LevelDOWN API\n      return callback(new Error('NotFound'));\n    }\n\n    callback(null, deserialize(value, options.asBuffer));\n  });\n};\n\nLevel.prototype._del = function (key, options, callback) {\n  var store = this.store('readwrite');\n\n  try {\n    var req = store.delete(key);\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n\n  this.await(req, callback);\n};\n\nLevel.prototype._put = function (key, value, options, callback) {\n  var store = this.store('readwrite');\n\n  try {\n    // Will throw a DataError or DataCloneError if the environment\n    // does not support serializing the key or value respectively.\n    var req = store.put(value, key);\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n\n  this.await(req, callback);\n};\n\nLevel.prototype._serializeKey = function (key) {\n  return serialize(key, this.supports.bufferKeys);\n};\n\nLevel.prototype._serializeValue = function (value) {\n  return serialize(value, true);\n};\n\nLevel.prototype._iterator = function (options) {\n  return new Iterator(this, this.location, options);\n};\n\nLevel.prototype._batch = function (operations, options, callback) {\n  if (operations.length === 0) return this._nextTick(callback);\n  var store = this.store('readwrite');\n  var transaction = store.transaction;\n  var index = 0;\n  var error;\n\n  transaction.onabort = function () {\n    callback(error || transaction.error || new Error('aborted by user'));\n  };\n\n  transaction.oncomplete = function () {\n    callback();\n  }; // Wait for a request to complete before making the next, saving CPU.\n\n\n  function loop() {\n    var op = operations[index++];\n    var key = op.key;\n\n    try {\n      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key);\n    } catch (err) {\n      error = err;\n      transaction.abort();\n      return;\n    }\n\n    if (index < operations.length) {\n      req.onsuccess = loop;\n    }\n  }\n\n  loop();\n};\n\nLevel.prototype._clear = function (options, callback) {\n  try {\n    var keyRange = createKeyRange(options);\n  } catch (e) {\n    // The lower key is greater than the upper key.\n    // IndexedDB throws an error, but we'll just do nothing.\n    return this._nextTick(callback);\n  }\n\n  if (options.limit >= 0) {\n    // IDBObjectStore#delete(range) doesn't have such an option.\n    // Fall back to cursor-based implementation.\n    return clear(this, this.location, keyRange, options, callback);\n  }\n\n  try {\n    var store = this.store('readwrite');\n    var req = keyRange ? store.delete(keyRange) : store.clear();\n  } catch (err) {\n    return this._nextTick(callback, err);\n  }\n\n  this.await(req, callback);\n};\n\nLevel.prototype._close = function (callback) {\n  this.db.close();\n\n  this._nextTick(callback);\n}; // NOTE: remove in a next major release\n\n\nLevel.prototype.upgrade = function (callback) {\n  if (this.status !== 'open') {\n    return this._nextTick(callback, new Error('cannot upgrade() before open()'));\n  }\n\n  var it = this.iterator();\n  var batchOptions = {};\n  var self = this;\n  it._deserializeKey = it._deserializeValue = identity;\n  next();\n\n  function next(err) {\n    if (err) return finish(err);\n    it.next(each);\n  }\n\n  function each(err, key, value) {\n    if (err || key === undefined) {\n      return finish(err);\n    }\n\n    var newKey = self._serializeKey(deserialize(key, true));\n\n    var newValue = self._serializeValue(deserialize(value, true)); // To bypass serialization on the old key, use _batch() instead of batch().\n    // NOTE: if we disable snapshotting (#86) this could lead to a loop of\n    // inserting and then iterating those same entries, because the new keys\n    // possibly sort after the old keys.\n\n\n    self._batch([{\n      type: 'del',\n      key: key\n    }, {\n      type: 'put',\n      key: newKey,\n      value: newValue\n    }], batchOptions, next);\n  }\n\n  function finish(err) {\n    it.end(function (err2) {\n      callback(err || err2);\n    });\n  }\n\n  function identity(data) {\n    return data;\n  }\n};\n\nLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix;\n    prefix = DEFAULT_PREFIX;\n  }\n\n  var request = indexedDB.deleteDatabase(prefix + location);\n\n  request.onsuccess = function () {\n    callback();\n  };\n\n  request.onerror = function (err) {\n    callback(err);\n  };\n};","map":{"version":3,"sources":["/home/duck/Documents/tweb/messenger2/frontend/node_modules/level-js/index.js"],"names":["module","exports","Level","AbstractLevelDOWN","require","inherits","Iterator","serialize","deserialize","support","clear","createKeyRange","DEFAULT_PREFIX","location","opts","call","bufferKeys","indexedDB","snapshots","permanence","Error","prefix","version","parseInt","prototype","type","_open","options","callback","req","open","self","onerror","error","onsuccess","db","result","onupgradeneeded","ev","target","objectStoreNames","contains","createObjectStore","store","mode","transaction","objectStore","await","request","onabort","oncomplete","_get","key","get","err","_nextTick","value","undefined","asBuffer","_del","delete","_put","put","_serializeKey","supports","_serializeValue","_iterator","_batch","operations","length","index","loop","op","abort","_clear","keyRange","e","limit","_close","close","upgrade","status","it","iterator","batchOptions","_deserializeKey","_deserializeValue","identity","next","finish","each","newKey","newValue","end","err2","data","destroy","deleteDatabase"],"mappings":"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","sourcesContent":["/* global indexedDB */\n\n'use strict'\n\nmodule.exports = Level\n\nvar AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nvar inherits = require('inherits')\nvar Iterator = require('./iterator')\nvar serialize = require('./util/serialize')\nvar deserialize = require('./util/deserialize')\nvar support = require('./util/support')\nvar clear = require('./util/clear')\nvar createKeyRange = require('./util/key-range')\n\nvar DEFAULT_PREFIX = 'level-js-'\n\nfunction Level (location, opts) {\n  if (!(this instanceof Level)) return new Level(location, opts)\n\n  AbstractLevelDOWN.call(this, {\n    bufferKeys: support.bufferKeys(indexedDB),\n    snapshots: true,\n    permanence: true,\n    clear: true\n  })\n\n  opts = opts || {}\n\n  if (typeof location !== 'string') {\n    throw new Error('constructor requires a location string argument')\n  }\n\n  this.location = location\n  this.prefix = opts.prefix == null ? DEFAULT_PREFIX : opts.prefix\n  this.version = parseInt(opts.version || 1, 10)\n}\n\ninherits(Level, AbstractLevelDOWN)\n\nLevel.prototype.type = 'level-js'\n\nLevel.prototype._open = function (options, callback) {\n  var req = indexedDB.open(this.prefix + this.location, this.version)\n  var self = this\n\n  req.onerror = function () {\n    callback(req.error || new Error('unknown error'))\n  }\n\n  req.onsuccess = function () {\n    self.db = req.result\n    callback()\n  }\n\n  req.onupgradeneeded = function (ev) {\n    var db = ev.target.result\n\n    if (!db.objectStoreNames.contains(self.location)) {\n      db.createObjectStore(self.location)\n    }\n  }\n}\n\nLevel.prototype.store = function (mode) {\n  var transaction = this.db.transaction([this.location], mode)\n  return transaction.objectStore(this.location)\n}\n\nLevel.prototype.await = function (request, callback) {\n  var transaction = request.transaction\n\n  // Take advantage of the fact that a non-canceled request error aborts\n  // the transaction. I.e. no need to listen for \"request.onerror\".\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback(null, request.result)\n  }\n}\n\nLevel.prototype._get = function (key, options, callback) {\n  var store = this.store('readonly')\n\n  try {\n    var req = store.get(key)\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, function (err, value) {\n    if (err) return callback(err)\n\n    if (value === undefined) {\n      // 'NotFound' error, consistent with LevelDOWN API\n      return callback(new Error('NotFound'))\n    }\n\n    callback(null, deserialize(value, options.asBuffer))\n  })\n}\n\nLevel.prototype._del = function (key, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    var req = store.delete(key)\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._put = function (key, value, options, callback) {\n  var store = this.store('readwrite')\n\n  try {\n    // Will throw a DataError or DataCloneError if the environment\n    // does not support serializing the key or value respectively.\n    var req = store.put(value, key)\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._serializeKey = function (key) {\n  return serialize(key, this.supports.bufferKeys)\n}\n\nLevel.prototype._serializeValue = function (value) {\n  return serialize(value, true)\n}\n\nLevel.prototype._iterator = function (options) {\n  return new Iterator(this, this.location, options)\n}\n\nLevel.prototype._batch = function (operations, options, callback) {\n  if (operations.length === 0) return this._nextTick(callback)\n\n  var store = this.store('readwrite')\n  var transaction = store.transaction\n  var index = 0\n  var error\n\n  transaction.onabort = function () {\n    callback(error || transaction.error || new Error('aborted by user'))\n  }\n\n  transaction.oncomplete = function () {\n    callback()\n  }\n\n  // Wait for a request to complete before making the next, saving CPU.\n  function loop () {\n    var op = operations[index++]\n    var key = op.key\n\n    try {\n      var req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n    } catch (err) {\n      error = err\n      transaction.abort()\n      return\n    }\n\n    if (index < operations.length) {\n      req.onsuccess = loop\n    }\n  }\n\n  loop()\n}\n\nLevel.prototype._clear = function (options, callback) {\n  try {\n    var keyRange = createKeyRange(options)\n  } catch (e) {\n    // The lower key is greater than the upper key.\n    // IndexedDB throws an error, but we'll just do nothing.\n    return this._nextTick(callback)\n  }\n\n  if (options.limit >= 0) {\n    // IDBObjectStore#delete(range) doesn't have such an option.\n    // Fall back to cursor-based implementation.\n    return clear(this, this.location, keyRange, options, callback)\n  }\n\n  try {\n    var store = this.store('readwrite')\n    var req = keyRange ? store.delete(keyRange) : store.clear()\n  } catch (err) {\n    return this._nextTick(callback, err)\n  }\n\n  this.await(req, callback)\n}\n\nLevel.prototype._close = function (callback) {\n  this.db.close()\n  this._nextTick(callback)\n}\n\n// NOTE: remove in a next major release\nLevel.prototype.upgrade = function (callback) {\n  if (this.status !== 'open') {\n    return this._nextTick(callback, new Error('cannot upgrade() before open()'))\n  }\n\n  var it = this.iterator()\n  var batchOptions = {}\n  var self = this\n\n  it._deserializeKey = it._deserializeValue = identity\n  next()\n\n  function next (err) {\n    if (err) return finish(err)\n    it.next(each)\n  }\n\n  function each (err, key, value) {\n    if (err || key === undefined) {\n      return finish(err)\n    }\n\n    var newKey = self._serializeKey(deserialize(key, true))\n    var newValue = self._serializeValue(deserialize(value, true))\n\n    // To bypass serialization on the old key, use _batch() instead of batch().\n    // NOTE: if we disable snapshotting (#86) this could lead to a loop of\n    // inserting and then iterating those same entries, because the new keys\n    // possibly sort after the old keys.\n    self._batch([\n      { type: 'del', key: key },\n      { type: 'put', key: newKey, value: newValue }\n    ], batchOptions, next)\n  }\n\n  function finish (err) {\n    it.end(function (err2) {\n      callback(err || err2)\n    })\n  }\n\n  function identity (data) {\n    return data\n  }\n}\n\nLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n  var request = indexedDB.deleteDatabase(prefix + location)\n  request.onsuccess = function () {\n    callback()\n  }\n  request.onerror = function (err) {\n    callback(err)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}